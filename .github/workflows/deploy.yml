name: Deploy

on:
  push:
    branches:
      - develop

env:
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/test-image:${{ github.sha }}
  SERVICE_NAME: fika-bff-nakagome
  PORT: 8080
  GCP_REGION: us-central1
  GIT_HUB_ACCOUNT: ${{ secrets.GIT_HUB_ACCOUNT }}
  AUTH0_DOMAIN: dev-t7kxxd60o2thjkzs.us.auth0.com
  AUTH0_AUDIENCE: https://fs-apigw-bff-nakagome-bi5axj14.uc.gateway.dev/

jobs:
  deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # リポジトリをチェックアウト
      - name: "Checkout the repository"
        uses: actions/checkout@v2

      # GCP 認証
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # gcloud コマンドの設定
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      # Docker に gcloud コマンドの Credential を使わせる
      - name: "Configure docker to use the gcloud cli"
        run: gcloud auth configure-docker --quiet

      # Github App token発行
      - name: Generate Github App token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.GIT_HUB_APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      # Docker イメージを作成
      - name: "Build a docker image"
        run: |
          docker build \
          -t $IMAGE \
          --build-arg GIT_HUB_ACCOUNT=${{ secrets.GIT_HUB_ACCOUNT }} \
          --build-arg TOKEN=${{ steps.generate_token.outputs.token }} \
          --build-arg RUNNING_ENV=${{ github.ref_name }} \
          .
      # Docker イメージを Container Registry に Push
      - name: "Push the docker image to Container Registry"
        run: docker push $IMAGE

      # Container Registry から Cloud Run へデプロイ
      - name: "Deploy to Cloud Run"
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE \
            --port $PORT \
            --project $GCP_PROJECT_ID \
            --update-env-vars AUTH0_DOMAIN=$AUTH0_DOMAIN, AUTH0_AUDIENCE=$AUTH0_AUDIENCE \
            --region $GCP_REGION \
            --platform=managed \
            --allow-unauthenticated \
            --quiet
